{
	"name": "LoadManufacturingFact",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MaxMinBatchfileDSt",
						"type": "DatasetReference"
					},
					"name": "BatchFile"
				},
				{
					"dataset": {
						"referenceName": "DimMachineDS",
						"type": "DatasetReference"
					},
					"name": "DimMachine"
				},
				{
					"dataset": {
						"referenceName": "DimProductDS",
						"type": "DatasetReference"
					},
					"name": "DimProduct"
				},
				{
					"dataset": {
						"referenceName": "ManufacturingFactDS",
						"type": "DatasetReference"
					},
					"name": "ExistingManufacturingFact"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ManufacturingFactDS",
						"type": "DatasetReference"
					},
					"name": "ManufacturingFact"
				}
			],
			"transformations": [
				{
					"name": "CreateDerivedColumns"
				},
				{
					"name": "lookupMachineNumber"
				},
				{
					"name": "lookupProduct"
				},
				{
					"name": "selectNeededColumns"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "LookupExistingManufacturingFact"
				}
			],
			"scriptLines": [
				"parameters{",
				"     BatchFile as string",
				"}",
				"source(output(",
				"          BatchNumber as short,",
				"          MachineNumber as short,",
				"          ProductCode as short,",
				"          TimeStarted as string,",
				"          TimeStopped as string,",
				"          NumberProduced as short,",
				"          NumberRejected as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BatchFile",
				"source(output(",
				"          MachineNumber as integer,",
				"          MachineName as string,",
				"          MachineType as string,",
				"          PlantNumber as integer,",
				"          Manufacturer as string,",
				"          DateOfPurchase as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimMachine",
				"source(output(",
				"          ProductCode as integer,",
				"          ProductName as string,",
				"          ProductSubtypeCode as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select ProductCode, ProductName, ProductSubtypeCode from [Manufacturing].[DimProduct]',",
				"     format: 'query') ~> DimProduct",
				"source(output(",
				"          AcceptedProducts as integer,",
				"          RejectedProducts as integer,",
				"          ElapsedTimeForManufacture as decimal(6,2),",
				"          DateOfManufacture as timestamp,",
				"          ProductCode as integer,",
				"          BatchNumber as integer,",
				"          MachineNumber as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ExistingManufacturingFact",
				"BatchFile derive(AcceptedProducts = toInteger(NumberProduced) -  toInteger(NumberRejected),",
				"          ElapsedTimeForManufacture = 100,",
				"          DateOfManufacture = toTimestamp(TimeStarted, 'dd/MM/yyyy')) ~> CreateDerivedColumns",
				"CreateDerivedColumns, DimMachine lookup(BatchFile@MachineNumber == DimMachine@MachineNumber,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupMachineNumber",
				"lookupMachineNumber, DimProduct lookup(BatchFile@ProductCode == DimProduct@ProductCode,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupProduct",
				"lookupProduct select(mapColumn(",
				"          BatchNumber,",
				"          MachineNumber = BatchFile@MachineNumber,",
				"          ProductCode = BatchFile@ProductCode,",
				"          NumberRejected,",
				"          AcceptedProducts,",
				"          ElapsedTimeForManufacture,",
				"          DateOfManufacture,",
				"          MachineName,",
				"          MachineNumber = DimMachine@MachineNumber",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectNeededColumns",
				"LookupExistingManufacturingFact alterRow(updateIf(isNull(ExistingManufacturingFact@ProductCode) == false() && isNull(ExistingManufacturingFact@BatchNumber) == false() && isNull(ExistingManufacturingFact@MachineNumber) == false()\r",
				")) ~> alterRow1",
				"selectNeededColumns, ExistingManufacturingFact lookup(selectNeededColumns@DateOfManufacture == ExistingManufacturingFact@DateOfManufacture",
				"     && selectNeededColumns@BatchNumber == ExistingManufacturingFact@BatchNumber",
				"     && selectNeededColumns@ProductCode == ExistingManufacturingFact@ProductCode",
				"     && selectNeededColumns@MachineNumber == ExistingManufacturingFact@MachineNumber,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupExistingManufacturingFact",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          AcceptedProducts as integer,",
				"          RejectedProducts as integer,",
				"          ElapsedTimeForManufacture as decimal(6,2),",
				"          DateOfManufacture as timestamp,",
				"          ProductCode as integer,",
				"          BatchNumber as integer,",
				"          MachineNumber as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['BatchNumber','MachineNumber','ProductCode'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          AcceptedProducts = selectNeededColumns@AcceptedProducts,",
				"          RejectedProducts,",
				"          ElapsedTimeForManufacture = selectNeededColumns@ElapsedTimeForManufacture,",
				"          DateOfManufacture = selectNeededColumns@DateOfManufacture,",
				"          ProductCode = selectNeededColumns@ProductCode,",
				"          BatchNumber = selectNeededColumns@BatchNumber,",
				"          MachineNumber = selectNeededColumns@MachineNumber",
				"     )) ~> ManufacturingFact"
			]
		}
	}
}